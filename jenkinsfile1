pipeline {
    agent any
    
    options {
        timestamps()
    }
    
    triggers {
        pollSCM('H/15 0 * * *')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        credentialsId: '447bbc4c-d2c8-40c9-a6f3-61e5e8b936b6',
                        url: 'https://github.com/Brian0213/ProjectTest.git'
                    ]]
                )
            }
        }
        
        stage('Install Dependencies') {
            steps {
                script {
                    if (isUnix()) {
                        sh '''
                            python3 -m venv venv
                            . venv/bin/activate
                            pip install --upgrade pip
                            pip install -r requirements.txt
                            pip install pytest pytest-html pytest-xdist
                            pip install selenium webdriver-manager
                        '''
                    } else {
                        bat '''
                            python -m venv venv
                            venv\\Scripts\\activate
                            pip install --upgrade pip
                            pip install -r requirements.txt
                            pip install pytest pytest-html pytest-xdist
                            pip install selenium webdriver-manager
                        '''
                    }
                }
            }
        }
        
        stage('Build') {
            steps {
                script {
                    if (isUnix()) {
                        sh '''
                            . venv/bin/activate
                            export PYTHONPATH=$WORKSPACE
                            pytest testCases/* --alluredir=./allurereports --html=Reports/index.html
                        '''
                    } else {
                        bat '''
                            venv\\Scripts\\activate
                            set PYTHONPATH=%WORKSPACE%
                            pytest testCases/* --alluredir=./allurereports --html=Reports\\index.html
                        '''
                    }
                }
            }
        }
        
        stage('Test') {
            steps {
                echo 'The job has been tested'
            }
        }
        
        stage('Publish Reports') {
            steps {
                script {
                    // Publish Allure Report
                    allure([
                        includeProperties: false,
                        jdk: '',
                        properties: [],
                        reportBuildPolicy: 'ALWAYS',
                        results: [[path: 'allurereports']]
                    ])
                    
                    // Publish HTML Report
                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: false,
                        reportDir: 'Reports',
                        reportFiles: 'index.html',
                        reportName: 'HTML Report',
                        reportTitles: '',
                        useWrapperFileDirectly: true
                    ])
                }
            }
        }
    }
    
    post {
        always {
            script {
                // Clean up workspace
                cleanWs()
                
                // Archive artifacts
                archiveArtifacts artifacts: 'Reports/**', allowEmptyArchive: true
            }
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
